image: Visual Studio 2019
environment:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  TEST_RESULT:    'TestResult.xml'
  TEST_COVERAGE:  'CoverResults.xml'

for:
  # configuration for "master" branch, build in Release mode
  -
    branches:
      only:
        - master
    configuration: Release
  # configuration for "development" branch, build in Debug mode
  -
    branches:
      only:
        - development
    configuration: Debug
# "fall back" configuration for all other branches
# no "branches" section defined
configuration: Debug

install:
  - choco install opencover.portable
  - dotnet tool install --global dotnet-sonarscanner

before_build:
  - cmd: nuget restore
  - cmd: nuget install NUnit.Console -Version 3.11.1 -OutputDirectory testrunner
  - cmd: nuget install NUnit.Runners -Version 3.11.1 -OutputDirectory testrunner
  - cmd: set "JAVA_HOME=C:\Program Files\Java\jdk11"
  - cmd: set "PATH=C:\Program Files\Java\jdk11\bin;%PATH%"
  - cmd: java -version
  - ps: >-
      if ($env:APPVEYOR_PULL_REQUEST_NUMBER) {
         Write-Host Sonar Scanning PR# $env:APPVEYOR_PULL_REQUEST_NUMBER
         dotnet sonarscanner begin /key:$env:SONARCLOUD_PROJECT_KEY /o:$env:SONARCLOUD_ORGANIZATION /d:sonar.host.url=$env:SONARCLOUD_URL /d:sonar.login=$env:SONARCLOUD_TOKEN /d:sonar.cs.opencover.reportsPaths=$env:TEST_COVERAGE /d:sonar.cs.nunit.reportsPaths=$env:TEST_RESULT /d:sonar.pullrequest.key=$env:APPVEYOR_PULL_REQUEST_NUMBER /d:sonar.pullrequest.provider=GitHub /d:sonar.pullrequest.github.repository=$env:APPVEYOR_REPO_NAME
      } else {
         Write-Host Sonar Scanning branch $env:APPVEYOR_REPO_BRANCH
         dotnet sonarscanner begin /key:$env:SONARCLOUD_PROJECT_KEY /o:$env:SONARCLOUD_ORGANIZATION /d:sonar.host.url=$env:SONARCLOUD_URL /d:sonar.login=$env:SONARCLOUD_TOKEN /d:sonar.cs.opencover.reportsPaths=$env:TEST_COVERAGE /d:sonar.cs.nunit.reportsPaths=$env:TEST_RESULT /d:sonar.branch.name=$env:APPVEYOR_REPO_BRANCH /d:sonar.pullrequest.github.repository=$env:APPVEYOR_REPO_NAME
      }

build_script:
  - cmd: dotnet build --configuration %CONFIGURATION% -v q

test_script:
  - >
    OpenCover.Console.exe
    -log:Error
    -register
    -target:"C:\Program Files\dotnet\dotnet.exe"
    -targetargs:"test --logger ""trx;LogFileName=%TEST_RESULT%"" --filter=""(TestCategory!~WebServicesDependent) & (TestCategory!~AppVeyorExclusion)"" --configuration %CONFIGURATION% -v q"
    -returntargetcode
    -hideskipped:All
    -output:"%TEST_COVERAGE%"
    -filter:"+[CDPBatchEditor*]* -[*.Tests*]*"
    -excludebyattribute:*.ExcludeFromCodeCoverageAttribute

after_test:
  - xcopy /q /Y /I "%TEST_COVERAGE%" "%TEST_LOG%\"
  - ps: >-
      dotnet sonarscanner end /d:"sonar.login=$env:SONARCLOUD_TOKEN"

artifacts:
  - path: '%TEST_LOG%'
